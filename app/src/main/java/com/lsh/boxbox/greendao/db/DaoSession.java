package com.lsh.boxbox.greendao.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.lsh.boxbox.model.CategoryEntity;
import com.lsh.boxbox.model.FunctionBean;

import com.lsh.boxbox.greendao.db.CategoryEntityDao;
import com.lsh.boxbox.greendao.db.FunctionBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig categoryEntityDaoConfig;
    private final DaoConfig functionBeanDaoConfig;

    private final CategoryEntityDao categoryEntityDao;
    private final FunctionBeanDao functionBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        categoryEntityDaoConfig = daoConfigMap.get(CategoryEntityDao.class).clone();
        categoryEntityDaoConfig.initIdentityScope(type);

        functionBeanDaoConfig = daoConfigMap.get(FunctionBeanDao.class).clone();
        functionBeanDaoConfig.initIdentityScope(type);

        categoryEntityDao = new CategoryEntityDao(categoryEntityDaoConfig, this);
        functionBeanDao = new FunctionBeanDao(functionBeanDaoConfig, this);

        registerDao(CategoryEntity.class, categoryEntityDao);
        registerDao(FunctionBean.class, functionBeanDao);
    }
    
    public void clear() {
        categoryEntityDaoConfig.clearIdentityScope();
        functionBeanDaoConfig.clearIdentityScope();
    }

    public CategoryEntityDao getCategoryEntityDao() {
        return categoryEntityDao;
    }

    public FunctionBeanDao getFunctionBeanDao() {
        return functionBeanDao;
    }

}
